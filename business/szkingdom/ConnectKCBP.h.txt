#ifndef _CONNECT_KCBP_
#define _CONNECT_KCBP_

#include <string>
#include <boost/date_time/gregorian/gregorian.hpp>
#include <boost/date_time/posix_time/posix_time.hpp>
//#include "common.h"
#include "Connect.h"


class ConnectKCBP : public Connect
{
public:
	ConnectKCBP();
	ConnectKCBP(int nID, std::string sIP, int nPort, std::string sServerName, std::string sUserName, std::string sPassword, std::string sReq, std::string sRes);
	
	~ConnectKCBP(void);

	int m_nID;
	std::string m_sIP;
	int m_nPort;
	std::string m_sUserName;
	std::string m_sPassword;
	std::string m_sReq;
	std::string m_sRes;
	std::string m_sServerName;
	std::string m_sServerInfo;


	int m_nConnectTimeout;
	int m_nReadTimeout;
	int m_nWriteTimeout;


	void * handle; // 柜台连接句柄

	int m_nRetry; // 连接重连次数
	bool CreateConnect();
	bool ReConnect();

	void CloseConnect();
	time_t prev; // 创建或前一次使用的时间，用于判断是否因为长时间没有操作造成的超时
	bool IsTimeout();

	std::string GetConnectInfo();




	/*
	建立连接
	连接重连
	关闭连接
	连接是否超时

	set连接状态，采用queue后，不再需要
	释放连接，采用queue后，不再需要
	get连接状态，采用queue后，不再需要
	*/

	int m_nStatus; // 当前连接状态 0空闲 1忙
	bool IsStatusIdle();
	void SetStatusBusy();
	void FreeConnect();
};
#endif
